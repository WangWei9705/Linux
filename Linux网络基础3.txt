面向字节流：对数据进行按照以字节为单位的流式传输
	特性：传输灵活但是有粘包问题
	
TCP粘包问题：有可能在发送端产生也有可能在接收端产生。
	   原因：内核没有对要发送的数据进行明确的边界区分
   解决方法：需要用户在应用层解决粘包问题，明确数据边界
			 1、加特殊字符进行间隔（有缺陷，容易与发送数据产生冲突
			 2、数据定长（缺陷：数据短了浪费，数据长了需要分割）
			 3、在不定长数据的应用协议头中定义数据长度(udp中的做法)

TCP连接管理中的保活机制：TCP协议在内部实现了保活机制，长时间无数据通信，则发送保活探测包（发送请求，要求回复）；若多次保活探测请求无回复，则认为连接断开

TCP连接断开体现：recv返回0、send触发SIGPIPE异常；
TCP只有连接断开才会返回0
	
TCP接口中的细节：listen第二个参数、accept（从已完成队列中获取新建的socket)

UDP如何实现可靠传输？（模仿TCP可靠传输的实现)

抓包工具：fiddler\wireshark\tcpdump

网络层：
	功能：负责地址管理与路由选择
		路由选择：在复杂的网络传输中对数据的传输选择一条合适的路径
	主机：个人PC
	路由器：实现路由转发的设备
	节点：网络中的任意设备
	IP地址不能随意分配，因为会有大概率导致IP地址冲突，导致数据无法发送；
	所以需要将IP地址分配规范化，每个路由器都能组建一个局域网，这个局域网就具有自己的网络标识（网络号），这个路由器向自己组建的主机分配IP地址都应该包含这个网络标识
	同时为了在局域网中，能够唯一标识主句，IP地址还应该包含主机标识（主机号）

	IP地址：网络号+主机号）
	IP地址的分配规范起来后，只需要保证相邻的网络具有不同的网络号
	
	一个路由器上相连的所有网络的网络为不能相同
	数据到了路由器之后，一旦网络号冲突会导致路由器不知道数据该给谁




